TranslationOctic := function(point1,point2,point3,point4,point5,point6,point7,point8,f) 
    
    P<x,y,z,t> := ProjectiveSpace(Rationals(),3);
    f<x,y,z,t> := Evaluate(f,<x,y,z,t>);
    bool0,point0 := [1,1,1,1] in P;
    bool1,point1 := point1 in P;
    bool2,point2 := point2 in P;
    bool3,point3 := point3 in P;
    bool4,point4 := point4 in P;
    bool5,point5 := point5 in P;
    bool6,point6 := point6 in P;
    bool7,point7 := point7 in P;
    bool8,point8 := point8 in P;
    All_points := [point0,point1,point2,point3,point4,point5,point6,point7,point8];
    True_points := [point1,point2,point3,point4,point5,point6,point7,point8];


    check := [0,0,0,0,0,0,0,0];
    List_of_automorphisms := [];

    for p1,p2,p3,p4,p5 in All_points do
        try 
            p := [p1,p2,p3,p4,p5];
            T := TranslationOfSimplex(P,p);
            bool,T_inv := IsInvertible(T);           
            for i in [1..8] do
                if (T(True_points[i]) in True_points) and (Evaluate(f,<x,y,z,t>) eq Evaluate(f,<T(x),T(y),T(z),T(t)>)) then
                    check[i] := 1;
                end if;
            end for;
            if check eq [1,1,1,1,1,1,1,1] and T^2 eq T_inv then
                Include(~List_of_automorphisms, T);
            end if;
            check := [0,0,0,0,0,0,0,0];
        catch e1;
        end try;
    end for;


  
    return(List_of_automorphisms);

end function;

P<x,y,z,t> := PolynomialRing(Rationals(),4);
pt1 := [1,0,0,0];
pt2 := [0,1,0,0];
pt3 := [0,0,1,0];
pt4 := [0,0,0,1];
pt5 := [1,1,0,0];
pt6 := [0,1,1,0];
pt7 := [0,0,1,1];
pt8 := [1,0,0,1];
f<x,y,z,t> := (pt1[1]*x+pt1[2]*y+pt1[3]*z+pt1[4]*t)*(pt2[1]*x+pt2[2]*y+pt2[3]*z+pt2[4]*t)*(pt3[1]*x+pt3[2]*y+pt3[3]*z+pt3[4]*t)*(pt4[1]*x+pt4[2]*y+pt4[3]*z+pt4[4]*t)*(pt5[1]*x+pt5[2]*y+pt5[3]*z+pt5[4]*t)*(pt6[1]*x+pt6[2]*y+pt6[3]*z+pt6[4]*t)*(pt7[1]*x+pt7[2]*y+pt7[3]*z+pt7[4]*t)*(pt8[1]*x+pt8[2]*y+pt8[3]*z+pt8[4]*t);
TranslationOctic(pt1,pt2,pt3,pt4,pt5,pt6,pt7,pt8,f);

